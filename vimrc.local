" fix solarized on OS X
let g:solarized_termcolors=0
set background=dark
" black magic... yeah esc key is too far away
inoremap jj <ESC>
" so i dont need to press shift
nnoremap ; :
" fast toggle listchars
nmap <leader>l :set list!<CR>
" long line could be slow sometimes
set synmaxcol=128
" use fast terminal
set ttyfast
" avoid scrolling problems
set lazyredraw
" The following function automatically aligns when typing a
" supported character
inoremap <silent> <Bar>   <Bar><Esc>:call <SID>align()<CR>a

function! s:align()
    let p = '^\s*|\s.*\s|\s*$'
    if exists(':Tabularize') && getline('.') =~# '^\s*|' && (getline(line('.')-1) =~# p || getline(line('.')+1) =~# p)
        let column = strlen(substitute(getline('.')[0:col('.')],'[^|]','','g'))
        let position = strlen(matchstr(getline('.')[0:col('.')],'.*|\s*\zs.*'))
        Tabularize/|/l1
        normal! 0
        call search(repeat('[^|]*|',column).'\s\{-\}'.repeat('.',position),'ce',line('.'))
    endif
endfunction

" disable folding
set nofoldenable

let g:indent_guides_auto_colors = 0
autocmd VimEnter,Colorscheme * :hi IndentGuidesOdd  guibg=#212121 ctermbg=3
autocmd VimEnter,Colorscheme * :hi IndentGuidesEven guibg=#404040 ctermbg=4

if has('gui_running')
    set guioptions-=T           " remove the toolbar
    set lines=40                " 40 lines of text instead of 24,
    if has("gui_gtk2")
        set guifont=Source\ Code\ Pro\ for\ Powerline\ 14,Andale\ Mono\ Regular\ 16,Menlo\ Regular\ 15,Consolas\ Regular\ 16,Courier\ New\ Regular\ 18
    else
        set guifont=Source\ Code\ Pro\ for\ Powerline:h14,Andale\ Mono\ Regular:h16,Menlo\ Regular:h15,Consolas\ Regular:h16,Courier\ New\ Regular:h18
    endif
    if has('gui_macvim')
        set transparency=1          " Make the window slightly transparent
    endif
endif


set ts=4 sts=4 sw=4 noexpandtab

"enable 'bracketed paste mode' in OS X > 10.7
"http://stackoverflow.com/questions/5585129/pasting-code-into-terminal-window-into-vim-on-mac-os-x

if &term =~ "xterm.*"
    let &t_ti = &t_ti . "\e[?2004h"
    let &t_te = "\e[?2004l" . &t_te
    function XTermPasteBegin(ret)
        set pastetoggle=<Esc>[201~
        set paste
        return a:ret
    endfunction
    map <expr> <Esc>[200~ XTermPasteBegin("i")
    imap <expr> <Esc>[200~ XTermPasteBegin("")
    cmap <Esc>[200~ <nop>
    cmap <Esc>[201~ <nop>
endif


" Set tabstop, softtabstop and shiftwidth to the same value
command! -nargs=* Stab call Stab()
function! Stab()
  let l:tabstop = 1 * input('set tabstop = softtabstop = shiftwidth = ')
  if l:tabstop > 0
    let &l:sts = l:tabstop
    let &l:ts = l:tabstop
    let &l:sw = l:tabstop
  endif
  call SummarizeTabs()
endfunction

function! SummarizeTabs()
  try
    echohl ModeMsg
    echon 'tabstop='.&l:ts
    echon ' shiftwidth='.&l:sw
    echon ' softtabstop='.&l:sts
    if &l:et
      echon ' expandtab'
    else
      echon ' noexpandtab'
    endif
  finally
    echohl None
  endtry
endfunction

" Invisible char colours
highlight NonText ctermfg=0 guifg=#4a4a59
highlight SpecialKey ctermfg=0 guifg=#4a4a59    

set listchars=tab:⇥\ ,trail:␣,eol:↩,nbsp:␣,extends:…,precedes:…

"enable powerline symbol in Unicode (patch font for this)"
let g:Powerline_symbols='fancy'

set mouse-=a
set clipboard=

"enabling powerline by hand, to be removed once they get it done
python from powerline.bindings.vim import source_plugin; source_plugin()

"disalbe F1
:nmap <F1> :echo<CR>
:imap <F1> <C-o>:echo<CR>
